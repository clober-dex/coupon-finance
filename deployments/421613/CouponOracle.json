{
  "address": "0xE0dBCB42CCAc63C949cE3EF879A647DDb662916d",
  "abi": [
    {
      "inputs": [],
      "name": "AssetFeedAlreadySet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthMismatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fallbackOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "getAssetsPrices",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFallbackOracle",
          "type": "address"
        }
      ],
      "name": "setFallbackOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "feeds",
          "type": "address[]"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x54a6260fda601ab26dc0a281155c5cc4b8d75012d26a13ff5bbce627aa752919",
  "receipt": {
    "to": null,
    "from": "0xa0E3174f4D222C5CBf705A138C6a9369935EeD81",
    "contractAddress": "0xE0dBCB42CCAc63C949cE3EF879A647DDb662916d",
    "transactionIndex": 1,
    "gasUsed": "628972",
    "logsBloom": "0x
    "blockHash": "0x81b6223d8f480e64706746d1b100939da3333d3485421726192a55ac911753f0",
    "transactionHash": "0x54a6260fda601ab26dc0a281155c5cc4b8d75012d26a13ff5bbce627aa752919",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 37846242,
        "transactionHash": "0x54a6260fda601ab26dc0a281155c5cc4b8d75012d26a13ff5bbce627aa752919",
        "address": "0xE0dBCB42CCAc63C949cE3EF879A647DDb662916d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a0e3174f4d222c5cbf705a138c6a9369935eed81"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x81b6223d8f480e64706746d1b100939da3333d3485421726192a55ac911753f0"
      }
    ],
    "blockNumber": 37846242,
    "cumulativeGasUsed": "628972",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fa5d6e29ef8f42306e85b1940dc88961",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssetFeedAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"setFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CouponOracle.sol\":\"CouponOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CouponOracle.sol\":{\"content\":\"// SPDX-License-Identifier: -\\n// License: https://license.clober.io/LICENSE.pdf\\n\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport {AggregatorV3Interface} from \\\"./external/chainlink/AggregatorV3Interface.sol\\\";\\nimport {ICouponOracle} from \\\"./interfaces/ICouponOracle.sol\\\";\\nimport {IFallbackOracle} from \\\"./interfaces/IFallbackOracle.sol\\\";\\n\\ncontract CouponOracle is ICouponOracle, Ownable {\\n    address public override fallbackOracle;\\n    mapping(address => address) public override getFeed;\\n\\n    function decimals() external pure returns (uint8) {\\n        return 8;\\n    }\\n\\n    function getAssetPrice(address asset) public view returns (uint256) {\\n        address feed = getFeed[asset];\\n\\n        if (feed != address(0)) {\\n            (, int256 price,,,) = AggregatorV3Interface(feed).latestRoundData();\\n            if (price > 0) return uint256(price);\\n        }\\n        return IFallbackOracle(fallbackOracle).getAssetPrice(asset);\\n    }\\n\\n    function getAssetsPrices(address[] memory assets) external view returns (uint256[] memory prices) {\\n        prices = new uint256[](assets.length);\\n        unchecked {\\n            for (uint256 i = 0; i < assets.length; ++i) {\\n                prices[i] = getAssetPrice(assets[i]);\\n            }\\n        }\\n    }\\n\\n    function setFallbackOracle(address newFallbackOracle) external onlyOwner {\\n        fallbackOracle = newFallbackOracle;\\n    }\\n\\n    function setFeeds(address[] memory assets, address[] memory feeds) external onlyOwner {\\n        if (assets.length != feeds.length) revert LengthMismatch();\\n        unchecked {\\n            for (uint256 i = 0; i < assets.length; ++i) {\\n                if (AggregatorV3Interface(feeds[i]).decimals() != 8) revert InvalidDecimals();\\n                if (getFeed[assets[i]] != address(0)) revert AssetFeedAlreadySet();\\n                getFeed[assets[i]] = feeds[i];\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x703ecdabf27d10ff93a3bc53a1bc430ed24fbb2f9da7b83d776180e5196689cc\",\"license\":\"-\"},\"contracts/external/chainlink/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x7ff8c1d6b6f7546cd29007e1b09d7d47d1efa3191c8e3024e1726da05bf57352\",\"license\":\"MIT\"},\"contracts/interfaces/ICouponOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\ninterface ICouponOracle {\\n    error LengthMismatch();\\n    error InvalidDecimals();\\n    error AssetFeedAlreadySet();\\n\\n    function decimals() external view returns (uint8);\\n\\n    function fallbackOracle() external view returns (address);\\n\\n    function getFeed(address asset) external view returns (address);\\n\\n    function getAssetPrice(address asset) external view returns (uint256);\\n\\n    function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory);\\n\\n    function setFallbackOracle(address newFallbackOracle) external;\\n\\n    function setFeeds(address[] memory assets, address[] memory feeds) external;\\n}\\n\",\"keccak256\":\"0x84581bf999fb333b99ccbdf2715955c0f36d9fc203acbc0bba95ede62ea850e7\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IFallbackOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFallbackOracle {\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0a6aecb7c925bd701123bf29829fdf61f1bca38f7adbf93e8406e918cc28f0fc\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109fd8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063b3596f071161005b578063b3596f0714610179578063f2fde38b1461019a578063f7af4ab4146101ad57600080fd5b80638da5cb5b146101485780639d23d9f21461015957600080fd5b8063313ce567116100a7578063313ce5671461011e578063629838e51461012d578063715018a61461014057600080fd5b806316b8e731146100c3578063170aee7314610109575b600080fd5b6100ec6100d1366004610753565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011c610117366004610753565b6101c0565b005b60405160088152602001610100565b6001546100ec906001600160a01b031681565b61011c6101f7565b6000546001600160a01b03166100ec565b61016c610167366004610826565b61020b565b6040516101009190610863565b61018c610187366004610753565b6102ac565b604051908152602001610100565b61011c6101a8366004610753565b6103d9565b61011c6101bb3660046108a7565b61046e565b6101c8610680565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6101ff610680565b61020960006106da565b565b6060815167ffffffffffffffff8111156102275761022761076e565b604051908082528060200260200182016040528015610250578160200160208202803683370190505b50905060005b82518110156102a6576102818382815181106102745761027461090b565b60200260200101516102ac565b8282815181106102935761029361090b565b6020908102919091010152600101610256565b50919050565b6001600160a01b03808216600090815260026020526040812054909116801561034b576000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561030f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610333919061093b565b5050509150506000811315610349579392505050565b505b6001546040517fb3596f070000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529091169063b3596f0790602401602060405180830381865afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d2919061098b565b9392505050565b6103e1610680565b6001600160a01b0381166104625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61046b816106da565b50565b610476610680565b80518251146104b1576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561067b578181815181106104cf576104cf61090b565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053891906109a4565b60ff16600814610574576040517fd25598a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b0316600260008584815181106105955761059561090b565b6020908102919091018101516001600160a01b039081168352908201929092526040016000205416146105f4576040517faeb417e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106106065761060661090b565b6020026020010151600260008584815181106106245761062461090b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060010190506104b4565b505050565b6000546001600160a01b031633146102095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610459565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461074e57600080fd5b919050565b60006020828403121561076557600080fd5b6103d282610737565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261079557600080fd5b8135602067ffffffffffffffff808311156107b2576107b261076e565b8260051b604051601f19603f830116810181811084821117156107d7576107d761076e565b6040529384528581018301938381019250878511156107f557600080fd5b83870191505b8482101561081b5761080c82610737565b835291830191908301906107fb565b979650505050505050565b60006020828403121561083857600080fd5b813567ffffffffffffffff81111561084f57600080fd5b61085b84828501610784565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561089b5783518352928401929184019160010161087f565b50909695505050505050565b600080604083850312156108ba57600080fd5b823567ffffffffffffffff808211156108d257600080fd5b6108de86838701610784565b935060208501359150808211156108f457600080fd5b5061090185828601610784565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b805169ffffffffffffffffffff8116811461074e57600080fd5b600080600080600060a0868803121561095357600080fd5b61095c86610921565b945060208601519350604086015192506060860151915061097f60808701610921565b90509295509295909350565b60006020828403121561099d57600080fd5b5051919050565b6000602082840312156109b657600080fd5b815160ff811681146103d257600080fdfea2646970667358221220c799c32dd27489fcf4eb4f9f753069a365258d64946a2b25162f28e8d71f431b64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063b3596f071161005b578063b3596f0714610179578063f2fde38b1461019a578063f7af4ab4146101ad57600080fd5b80638da5cb5b146101485780639d23d9f21461015957600080fd5b8063313ce567116100a7578063313ce5671461011e578063629838e51461012d578063715018a61461014057600080fd5b806316b8e731146100c3578063170aee7314610109575b600080fd5b6100ec6100d1366004610753565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011c610117366004610753565b6101c0565b005b60405160088152602001610100565b6001546100ec906001600160a01b031681565b61011c6101f7565b6000546001600160a01b03166100ec565b61016c610167366004610826565b61020b565b6040516101009190610863565b61018c610187366004610753565b6102ac565b604051908152602001610100565b61011c6101a8366004610753565b6103d9565b61011c6101bb3660046108a7565b61046e565b6101c8610680565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6101ff610680565b61020960006106da565b565b6060815167ffffffffffffffff8111156102275761022761076e565b604051908082528060200260200182016040528015610250578160200160208202803683370190505b50905060005b82518110156102a6576102818382815181106102745761027461090b565b60200260200101516102ac565b8282815181106102935761029361090b565b6020908102919091010152600101610256565b50919050565b6001600160a01b03808216600090815260026020526040812054909116801561034b576000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561030f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610333919061093b565b5050509150506000811315610349579392505050565b505b6001546040517fb3596f070000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529091169063b3596f0790602401602060405180830381865afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d2919061098b565b9392505050565b6103e1610680565b6001600160a01b0381166104625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61046b816106da565b50565b610476610680565b80518251146104b1576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561067b578181815181106104cf576104cf61090b565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053891906109a4565b60ff16600814610574576040517fd25598a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b0316600260008584815181106105955761059561090b565b6020908102919091018101516001600160a01b039081168352908201929092526040016000205416146105f4576040517faeb417e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106106065761060661090b565b6020026020010151600260008584815181106106245761062461090b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060010190506104b4565b505050565b6000546001600160a01b031633146102095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610459565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461074e57600080fd5b919050565b60006020828403121561076557600080fd5b6103d282610737565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261079557600080fd5b8135602067ffffffffffffffff808311156107b2576107b261076e565b8260051b604051601f19603f830116810181811084821117156107d7576107d761076e565b6040529384528581018301938381019250878511156107f557600080fd5b83870191505b8482101561081b5761080c82610737565b835291830191908301906107fb565b979650505050505050565b60006020828403121561083857600080fd5b813567ffffffffffffffff81111561084f57600080fd5b61085b84828501610784565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561089b5783518352928401929184019160010161087f565b50909695505050505050565b600080604083850312156108ba57600080fd5b823567ffffffffffffffff808211156108d257600080fd5b6108de86838701610784565b935060208501359150808211156108f457600080fd5b5061090185828601610784565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b805169ffffffffffffffffffff8116811461074e57600080fd5b600080600080600060a0868803121561095357600080fd5b61095c86610921565b945060208601519350604086015192506060860151915061097f60808701610921565b90509295509295909350565b60006020828403121561099d57600080fd5b5051919050565b6000602082840312156109b657600080fd5b815160ff811681146103d257600080fdfea2646970667358221220c799c32dd27489fcf4eb4f9f753069a365258d64946a2b25162f28e8d71f431b64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CouponOracle.sol:CouponOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10595,
        "contract": "contracts/CouponOracle.sol:CouponOracle",
        "label": "fallbackOracle",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 10600,
        "contract": "contracts/CouponOracle.sol:CouponOracle",
        "label": "getFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}